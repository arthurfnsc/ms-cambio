plugins {

    id "com.appmattus.markdown" version "0.6.0" apply false
    id "com.github.ben-manes.versions" version "0.29.0" apply false
    id "io.gitlab.arturbosch.detekt" version "1.12.0" apply false
    id "io.spring.dependency-management" version "1.0.10.RELEASE"
    id "net.corda.plugins.cordapp" version "5.0.11"
    id "net.corda.plugins.cordformation" version "5.0.11"
    id "net.corda.plugins.quasar-utils" version "5.0.11"
    id "net.ltgt.apt" version "0.21" apply false
    id "net.ossindex.audit" version "0.4.11" apply false
    id "org.jetbrains.dokka" version "0.10.1" apply false
    id "org.jetbrains.kotlin.jvm" version "1.4.0"
    id "org.jetbrains.kotlin.plugin.spring" version "1.4.0" apply false
    id "org.openapi.generator" version "4.3.1" apply false
    id "org.owasp.dependencycheck" version "5.3.2.1" apply false
    id "org.sonarqube" version "3.0" apply false
    id "org.springframework.boot" version "2.3.3.RELEASE"
}

ext {

    artemisJmsVersion = "2.6.2"
    assertJVersion = "3.17.1"
    cordaVersion = "4.5"
    detektVersion = "1.12.0"
    gradleWrapperVersion = "6.6.1"
    jacksonDatabindNullableVersion = "0.2.1"
    jsonVersion = "1.1.4"
    junitVersion = "5.6.2"
    mapstructKotlinVersion = "1.4.0.0"
    mapstructVersion = "1.3.1.Final"
    mockitoVersion = "3.5.10"
    springFoxVersion = "3.0.0"

    cordaGroup = "net.corda"
    kotlinGroup = "org.jetbrains.kotlin"
    springBootGroup = "org.springframework.boot"
    springFoxGroup = "io.springfox"

    corda_release_version = cordaVersion

    libs = [
        corda : [
            "$cordaGroup:corda-core:$cordaVersion",
            "$cordaGroup:corda-jackson:$cordaVersion",
            "$cordaGroup:corda-node-api:$cordaVersion",
            "$cordaGroup:corda-rpc:$cordaVersion"
        ],
        kotlin : [
            "$kotlinGroup:kotlin-reflect",
            "$kotlinGroup:kotlin-stdlib-jdk8"
        ],
        openApiServer : [
            "org.openapitools:jackson-databind-nullable:$jacksonDatabindNullableVersion"
        ],
        springBoot : [
            "$springBootGroup:spring-boot-starter",
            "$springBootGroup:spring-boot-starter-web"
        ],
        springFox : [
            "$springFoxGroup:springfox-swagger2:$springFoxVersion",
            "$springFoxGroup:springfox-swagger-ui:$springFoxVersion"
        ],
        unitTest : [
            "org.assertj:assertj-core:$assertJVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "org.mockito:mockito-core:$mockitoVersion",
            "$springBootGroup:spring-boot-starter-test"
        ]
    ]
}

group = "br.com.fiap.mba.ms-cambio"
version = "0.0.1-SNAPSHOT"

repositories {

    mavenLocal()
    mavenCentral()
    maven {url "https://ci-artifactory.corda.r3cev.com/artifactory/corda"}
    jcenter()
}

apply from: "$rootDir/plugins/kotlin.gradle"

apply from: "$rootDir/plugins/docs.gradle"
apply from: "$rootDir/plugins/ides.gradle"
apply from: "$rootDir/plugins/jacoco.gradle"
apply from: "$rootDir/plugins/lint.gradle"
apply from: "$rootDir/plugins/mapstruct.gradle"
apply from: "$rootDir/plugins/security.gradle"
apply from: "$rootDir/plugins/sonarqube.gradle"

dependencies {

    api "com.github.pozo:mapstruct-kotlin:$mapstructKotlinVersion"

    cordaCompile libs.corda

    cordaRuntime "$cordaGroup:corda:$cordaVersion"

    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:$detektVersion"

    kapt "com.github.pozo:mapstruct-kotlin-processor:$mapstructKotlinVersion"
    kapt "org.mapstruct:mapstruct-processor:$mapstructVersion"

    implementation libs.kotlin
    implementation libs.openApiServer
    implementation libs.springBoot
    implementation libs.springFox

    implementation "javax.json:javax.json-api:$jsonVersion"
    implementation "org.mapstruct:mapstruct:$mapstructVersion"
    implementation "org.apache.activemq:artemis-jms-server:$artemisJmsVersion"
    implementation "org.openapitools:jackson-databind-nullable:$jacksonDatabindNullableVersion"

    testImplementation libs.unitTest

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

wrapper {

    gradleVersion = "$gradleWrapperVersion"
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {

    if (JavaVersion.current() != JavaVersion.VERSION_1_8) {
        throw new GradleException("This build must be run with java 8")
    }

    nodeDefaults {
        projectCordapp { deploy = false }
    }

    node {
        name "O=Banco,L=Brasilia,C=BR"
        p2pPort 10000
        rpcSettings {
            address("localhost:10010")
            adminAddress("localhost:10020")
        }
        rpcUsers = [[ user: "user1", "password": "test1", "permissions": ["ALL"]]]
    }

    node {
        name "O=Corretora,L=SÃ£o Paulo,C=BR"
        p2pPort 10001
        rpcSettings {
            address("localhost:10011")
            adminAddress("localhost:10021")
        }
        rpcUsers = [[ user: "user2", "password": "test2", "permissions": ["ALL"]]]
    }
}

task runBancoServer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "br.com.fiap.mba.mscambio.MsCambioApplicationKt"
    args '--config.rpc.host=localhost',
        '--config.rpc.port=10010',
        '--config.rpc.username=user1',
        '--config.rpc.password=test1',
        '--server.port=50001',
        '--spring.profiles.active=dev'
}

task runCorretoraServer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "br.com.fiap.mba.mscambio.MsCambioApplicationKt"
    args '--config.rpc.host=localhost',
        '--config.rpc.port=10011',
        '--config.rpc.username=user2',
        '--config.rpc.password=test2',
        '--server.port=50002',
        '--spring.profiles.active=dev'
}
